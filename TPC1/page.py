import os, re
from lxml import etree
from pathlib import Path

antigas_path = 'imagem/'
novas_path = 'atual/'
dirFilesAnt = os.listdir(antigas_path)
dirFilesAtual = os.listdir(novas_path)

for nome_arquivo in os.listdir('texto'):
    # Iterar por cada arquivo .xml. Para já, obtemos apenas o nome da rua e o número
    if nome_arquivo.endswith('.xml'):
        caminho_arquivo = os.path.join('texto', nome_arquivo)
        parser = etree.XMLParser()
        tree = etree.parse(caminho_arquivo, parser)
        root = tree.getroot()
        numero = root.find('.//meta/número').text
        nome = root.find('.//meta/nome').text

    # Criar o ficheiro html
    f = open('html/' + numero + '.html','w+', encoding='utf-8')

    preHTML = f"""
    <!DOCTYPE html>
    <html>
    <head>
        <title>Ruas de Braga</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="w3.css">
        <meta charset="utf-8"/>
    </head>
    <body>
        <div class="w3-card-4">
            <header class="w3-container w3-green">
                <h3>Rua: {nome}</h3>
            </header>
        </div>
    """

    posHTML = f"""
        <div>
            <footer class="w3-container w3-green">
                <h2>
                    <a href="index.html">
                    Voltar para a página principal</a>
                </h2>
                <h5>Generated by EMDApp::EngWeb2024::A100902</h5>
            </footer>
        </div>
    </body>
    </html>
    """

    conteudo = ""

    # Obter a descrição de cada rua
    for para in root.findall('corpo/para'):
        text = ""
        for part in para.itertext():
            text += part.strip() + " "
        conteudo += "<p>{}</p>".format(text.strip())
    
    # Obter a lista de casas e dados correspondentes (apenas nos casos em que há uma lista)
    if len(root.findall('corpo/lista-casas/casa')) != 0:
        conteudo += f"""
        <div class='w3-container'>
            <h2>Lista de Casas</h2>
                <table class='w3-table w3-striped'>
                    <tr><th>Número</th><th>Enfiteuta</th><th>Foro</th><th>Descrição</th><th>Lugar</th></tr>
        """
        for casa in root.findall('corpo/lista-casas/casa'):
            nr = casa.find('número').text
            enfiteuta = casa.find('enfiteuta').text if casa.find('enfiteuta') is not None else "INDISPONÍVEL"
            foro = casa.find('foro').text if casa.find('foro') is not None else "INDISPONÍVEL"
            lugar = casa.find('desc/para/lugar').text if casa.find('desc/para/lugar') is not None else "INDISPONÍVEL"
            desc = ""
            if casa.find('desc/para') is not None:
                for part in casa.find('desc/para').itertext():
                    desc += part.strip() + " "
            else:
                desc = "INDISPONÍVEL"

            conteudo += "<tr>"
            conteudo += "<td>{}</td>".format(nr)
            conteudo += "<td>{}</td>".format(enfiteuta)
            conteudo += "<td>{}</td>".format(foro)
            conteudo += "<td>{}</td>".format(desc)
            conteudo += "<td>{}</td>".format(lugar)
            conteudo += "</tr>"
            conteudo += "<tr><td colspan='5'><hr></td></tr>"
        conteudo += "</table></div>"
    else:
        conteudo += f"""
        <div class='w3-container'>
            <h5><b>AVISO: Não existe uma lista de casas para esta rua</b></h5>
        </div>
        """

    imagens_antigas = []
    imagens_novas = []
    legendas = []
    
    # Obter os caminhos das imagens antigas e respetivas legendas presentes no .xml
    for figura in root.findall('corpo/figura'):
        imagem = figura.find('imagem')
        imagens_antigas.append(imagem.get('path')[3:]) # retirar o ../
        legenda = figura.find('legenda')
        legendas.append(legenda.text)
    
    # Pôr as extensões das imagens em lowercase
    imagens_antigas = [f"{filename.rsplit('.', 1)[0]}.{filename.rsplit('.', 1)[1].lower()}" for filename in imagens_antigas]

    # Obter os caminhos das imagens novas
    pattern = rf'^{numero}-.*$'
    imagens_novas = [file for file in dirFilesAtual if re.match(pattern, file)]
    
    # Criar o html para apresentar as imagens antigas
    for img, legenda in zip(imagens_antigas, legendas):
        if img not in dirFilesAnt:
            img = f"{img.rsplit('.', 1)[0]}.{img.rsplit('.', 1)[1].upper()}" #caso em que a extensão está em CAPS 
        conteudo += f"""
            <div class="w3-container w3-teal">
                <h1>{nome}</h1>
                <figcaption>{legenda}</figcaption>
            </div>
            <img src="{'../' + img}" alt="{legenda}" style="width:100%">  
        """

    # Criar o html para apresentar as imagens antigas
    for img in imagens_novas:
        conteudo += f"""
            <div class="w3-container w3-teal">
                <h1>{nome}</h1>
            </div>
            <img src="{'../atual/' + img}" alt="{"Error showing the image"}" style="width:100%">
        """
    f.write(preHTML + conteudo + posHTML)

print("Pages created!")